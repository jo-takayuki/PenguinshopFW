<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.app.mapper.ItemMapper">

	<resultMap type="Item" id="join" autoMapping="true">
		<collection property="picture" ofType="Picture"
			autoMapping="true">
			<result property="name" column="picture_name" />
		</collection>
	</resultMap>

	<select id="findAll" resultMap="join">
		SELECT items.id, items.name,
		items.price, items.text, items.created,
		MIN(pictures.name) as
		picture_name
		FROM items
		LEFT JOIN pictures ON
		items.id = pictures.item_id
		GROUP BY items.id, items.name
	</select>

	<select id="count" resultType="long">
		SELECT COUNT(*) FROM items
	</select>

	<select id="limit" resultMap="join">
		SELECT items.id, items.name,
		items.price, items.text, items.created,
		MIN(pictures.name) as
		picture_name
		FROM items
		LEFT JOIN pictures ON
		items.id = pictures.item_id
		GROUP BY items.id, items.name
		LIMIT #{offset}, #{numPage}
	</select>

	<select id="findById" resultType="Item" parameterType="int">
		SELECT *
		FROM items WHERE id = #{id}
	</select>

	<select id="findCart" resultMap="join" parameterType="int">
		SELECT items.id, items.name,
		items.price, items.text, items.created,
		MIN(pictures.name) as picture_name
		FROM items
		LEFT JOIN pictures ON
		items.id = pictures.item_id
		WHERE items.id = #{id}
		GROUP BY items.id,
		items.name
	</select>

	<select id="search" resultMap="join" parameterType="String">
		SELECT items.id, items.name,
		items.price, items.text, items.created,
		MIN(pictures.name) as
		picture_name
		FROM items
		LEFT JOIN pictures ON
		items.id = pictures.item_id
		WHERE items.name LIKE
		CONCAT('%',#{key},'%')
		GROUP BY items.id,
		items.name;
	</select>

	<select id="findByCompanyId" parameterType="int"
		resultMap="join">
		SELECT items.id, items.name, items.price, items.text,
		MIN(pictures.name) as picture_name
		FROM items LEFT JOIN pictures ON
		items.id = pictures.item_id
		WHERE company_id = #{id}
		GROUP BY items.id,
		items.name
	</select>

	<insert id="insert" parameterType="Item" useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO items (name,
		price, text, company_id, created)
		VALUES (#{name}, #{price}, #{text},
		#{companyId}, NOW())
	</insert>

	<update id="update" parameterType="Item">
		UPDATE items SET name =
		#{name}, price = #{price}, text = #{text}
		WHERE id = #{id}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM items WHERE id =
		#{id}
	</delete>

</mapper>